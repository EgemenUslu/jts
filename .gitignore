# Custom
frontend/src/config/config.js
frontend/node_modules
frontend/*.idea
frontend/build
frontend/dist
.vscode/tasks.json
.DS_Store
# Byte-compiled / optimized / DLL files
backend/**/__pycache__
**/__pycache__
backend/*.py[cod]
backend/*$py.class

# C extensions
backend/*.so

# Distribution / packaging
backend/inapp_error.log
backend/debug.log
backend/media/
backend/static/


backend/.Python
backend/build/
backend/develop-eggs/
backend/dist/
backend/downloads/
backend/eggs/
backend/.eggs/
backend/lib/
backend/lib64/
backend/parts/
backend/sdist/
backend/var/
backend/wheels/
backend/pip-wheel-metadata/
backend/share/python-wheels/
backend/*.egg-info/
backend/.installed.cfg
backend/*.egg
backend/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
backend/*.manifest
backend/*.spec

# Installer logs
backend/pip-log.txt
backend/pip-delete-this-directory.txt

# Unit test / coverage reports
backend/htmlcov/
backend/.tox/
backend/.nox/
backend/.coverage
backend/.coverage.*
backend/.cache
backend/nosetests.xml
backend/coverage.xml
backend/*.cover
backend/*.py,cover
backend/.hypothesis/
backend/.pytest_cache/

# Translations
backend/*.mo
backend/*.pot

# Django stuff:
backend/*.log
backend/local_settings.py
backend/db.sqlite3
backend/db.sqlite3-journal

# Flask stuff:
backend/instance/
backend/.webassets-cache

# Scrapy stuff:
backend/.scrapy

# Sphinx documentation
backend/docs/_build/

# PyBuilder
backend/target/

# Jupyter Notebook
backend/.ipynb_checkpoints

# IPython
backend/profile_default/
backend/ipython_config.py

# pyenv
backend/.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
backend/__pypackages__/

# Celery stuff
backend/celerybeat-schedule
backend/celerybeat.pid

# SageMath parsed files
backend/*.sage.py

# Environments
backend/.env
backend/.venv
backend/env/
backend/venv/
backend/ENV/
backend/env.bak/
backend/venv.bak/

# Spyder project settings
backend/.spyderproject
backend/.spyproject

# Rope project settings
backend/.ropeproject

# mkdocs documentation
backend//site

# mypy
backend/.mypy_cache/
backend/.dmypy.json
backend/dmypy.json

# Pyre type checker
backend/.pyre/

## NODE YARN
# Logs
logs
*.log
frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*
frontend/lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
frontend/coverage
frontend/*.lcov

# nyc test coverage
frontend/.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
frontend/.grunt

# Bower dependency directory (https://bower.io/)
frontend/bower_components

# node-waf configuration
frontend/.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
frontend/build/Release

# Dependency directories
frontend/node_modules/
frontend/jspm_packages/

# TypeScript v1 declaration files
frontend/typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
frontend/.npm

# Optional eslint cache
frontend/.eslintcache

# Microbundle cache
frontend/.rpt2_cache/
frontend/.rts2_cache_cjs/
frontend/.rts2_cache_es/
frontend/.rts2_cache_umd/

# Optional REPL history
frontend/.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
frontend/.yarn-integrity

# dotenv environment variables file
frontend/.env
frontend/.env.test

# parcel-bundler cache (https://parceljs.org/)
frontend/.cache

# Next.js build output
frontend/.next

# Nuxt.js build / generate output
frontend/.nuxt
frontend/dist

# Gatsby files
frontend/.cache/
# Comment in the public line in if your project uses Gatsby and *not* Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
frontend/.vuepress/dist

# Serverless directories
frontend/.serverless/

# FuseBox cache
frontend/.fusebox/

# DynamoDB Local files
frontend/.dynamodb/

# TernJS port file
frontend/.tern-port
